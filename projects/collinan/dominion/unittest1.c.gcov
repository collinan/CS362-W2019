        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:
        -:    9://testing int whoseTurn()
        -:   10:
        -:   11:
function main called 1 returned 100% blocks executed 100%
        1:   12:int main(){
        1:   13:	struct gameState* teststate = malloc(sizeof(struct gameState));
        -:   14:	int expected_value;
        1:   15:	int temp=0;//holds function reutn value or number corresponfin to whose turn it is currentls
        -:   16:int i;
        -:   17:
        -:   18:
        -:   19:
        1:   20:	teststate->whoseTurn = 0;//initialize with player one 
        1:   21:	expected_value=0;//initialize with player one 
        -:   22:
        5:   23:	for(i=0;i< MAX_PLAYERS;i++){
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:   24:
        4:   25:		teststate->whoseTurn =i;//set player number in game struct 
        4:   26:		expected_value=i;//	set expected player value whoseTurn should return
        4:   27:		temp=whoseTurn(teststate);
call    0 returned 100%
        4:   28:		if(temp == expected_value){//compare expected and returned value
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        4:   29:			printf( "TEST PASSED: Values matched");
call    0 returned 100%
        4:   30:				printf("Expected value: %d   whoseTurn function return value: %d\n",expected_value,temp);
call    0 returned 100%
        -:   31:		}
        -:   32:
        -:   33:	}
        -:   34:
        -:   35:
        1:   36:	return 0;
        -:   37:}
